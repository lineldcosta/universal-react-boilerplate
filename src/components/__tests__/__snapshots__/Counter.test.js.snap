// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <p
        className="count"
    >
        Counter: 
        0
    </p>
    <button
        onClick={[Function]}
    >
        Increment
    </button>
    <button
        onClick={[Function]}
    >
        Decrement
    </button>
    <button
        onClick={[Function]}
    >
        Reset
    </button>
</div>,
  "nodes": Array [
    <div>
      <p
            className="count"
      >
            Counter: 
            0
      </p>
      <button
            onClick={[Function]}
      >
            Increment
      </button>
      <button
            onClick={[Function]}
      >
            Decrement
      </button>
      <button
            onClick={[Function]}
      >
            Reset
      </button>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Counter
        count={0}
        onDecrement={[Function]}
        onIncrement={[Function]}
        onReset={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "count": 0,
          "onDecrement": [Function],
          "onIncrement": [Function],
          "onReset": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <p
                    className="count"
          >
                    Counter: 
                    0
          </p>
          <button
                    onClick={[Function]}
          >
                    Increment
          </button>
          <button
                    onClick={[Function]}
          >
                    Decrement
          </button>
          <button
                    onClick={[Function]}
          >
                    Reset
          </button>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <p
                    className="count"
          >
                    Counter: 
                    0
          </p>
          <button
                    onClick={[Function]}
          >
                    Increment
          </button>
          <button
                    onClick={[Function]}
          >
                    Decrement
          </button>
          <button
                    onClick={[Function]}
          >
                    Reset
          </button>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Counter
    count={0}
    onDecrement={[Function]}
    onIncrement={[Function]}
    onReset={[Function]}
/>,
}
`;
